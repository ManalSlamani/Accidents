# Generated by Django 3.0.5 on 2020-07-29 01:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegativeSamples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_chauff', models.IntegerField(blank=True, db_column='AGE_CHAUFF', null=True)),
                ('annee_permis', models.DateField(blank=True, db_column='ANNEE_PERMIS', null=True)),
                ('cat_veh', models.CharField(blank=True, db_column='CAT_VEH', max_length=30, null=True)),
                ('couverturenuage', models.IntegerField(blank=True, db_column='CouvertureNuage', null=True)),
                ('heure', models.TimeField(blank=True, db_column='HEURE', null=True)),
                ('humidite', models.IntegerField(blank=True, db_column='Humidite', null=True)),
                ('jour', models.CharField(blank=True, db_column='JOUR', max_length=12, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('mois', models.CharField(blank=True, db_column='MOIS', max_length=12, null=True)),
                ('nbre_bless', models.IntegerField(blank=True, db_column='NBRE_BLESS', null=True)),
                ('nbre_dec', models.IntegerField(blank=True, db_column='NBRE_DEC', null=True)),
                ('neige', models.IntegerField(blank=True, db_column='Neige', null=True)),
                ('precipitation', models.IntegerField(blank=True, db_column='Precipitation', null=True)),
                ('type_route', models.CharField(blank=True, db_column='TYPE_ROUTE', max_length=50, null=True)),
                ('tempvent', models.IntegerField(blank=True, db_column='TempVent', null=True)),
                ('temperature', models.IntegerField(blank=True, db_column='Temperature', null=True)),
                ('visiblite', models.IntegerField(blank=True, db_column='Visiblite', null=True)),
                ('vitessevent', models.IntegerField(blank=True, db_column='VitesseVent', null=True)),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('date_naiss_chauff', models.DateField(blank=True, db_column='date_naiss_chauff', null=True)),
                ('wilaya', models.CharField(blank=True, db_column='wilaya', max_length=20, null=True)),
                ('accidet', models.IntegerField(blank=True, db_column='Accidet', null=True)),
            ],
            options={
                'db_table': 'negative_samples',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sheet1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wilaya', models.CharField(blank=True, db_column='wilaya', max_length=20, null=True)),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('cause_acc', models.CharField(blank=True, db_column='CAUSE_ACC', max_length=50, null=True)),
                ('type_route', models.CharField(blank=True, db_column='TYPE_ROUTE', max_length=50, null=True)),
                ('jour', models.CharField(blank=True, db_column='JOUR', max_length=12, null=True)),
                ('mois', models.CharField(blank=True, db_column='MOIS', max_length=12, null=True)),
                ('heure', models.TimeField(blank=True, db_column='HEURE', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('nbre_dec', models.IntegerField(blank=True, db_column='NBRE_DEC', null=True)),
                ('nbre_bless', models.IntegerField(blank=True, db_column='NBRE_BLESS', null=True)),
                ('annee_permis', models.DateField(blank=True, db_column='ANNEE_PERMIS', null=True)),
                ('cat_veh', models.CharField(blank=True, db_column='CAT_VEH', max_length=20, null=True)),
                ('date_naiss_chauff', models.DateField(blank=True, db_column='date_naiss_chauff', null=True)),
                ('age_chauff', models.IntegerField(blank=True, db_column='AGE_CHAUFF', null=True)),
                ('temperature', models.IntegerField(blank=True, db_column='Temperature', null=True)),
                ('vitessevent', models.IntegerField(blank=True, db_column='VitesseVent', null=True)),
                ('precipitation', models.IntegerField(blank=True, db_column='Precipitation', null=True)),
                ('humidite', models.IntegerField(blank=True, db_column='Humidite', null=True)),
                ('visibilite', models.IntegerField(blank=True, db_column='Visibilite', null=True)),
                ('couverturenuage', models.IntegerField(blank=True, db_column='CouvertureNuage', null=True)),
                ('tempvent', models.IntegerField(blank=True, db_column='TempVent', null=True)),
                ('neige', models.IntegerField(blank=True, db_column='Neige', null=True)),
                ('accident', models.IntegerField(blank=True, db_column='Accident', null=True)),
            ],
            options={
                'db_table': 'sheet1',
                'managed': False,
            },
        ),
    ]
